
#

pipeline {
     agent any
     environment {
        RunTests = "True"
        TestsRunSuccessfully = "True"
    }
     stages {
         stage('Initialize the variables') {
             steps{
                 script{
                     PROCESS_OUTPUT_PATH = "${WORKSPACE}\\Process\\Output\\${BUILD_NUMBER}"
                     TEST_OUTPUT_PATH = "${WORKSPACE}\\test-reports"
                     ASSETS_FILE_PATH = "${WORKSPACE}\\assets.csv"
                 }
             }               
         }
         stage('Test code') {
            when {
                equals expected : 'True', actual: RunTests
            }
             steps {
                 echo 'UiPathTest'
                 UiPathTest(
                     credentials: Token(accountName: 'aitraining', credentialsId: 'userkeyOrch'),
                     folderName: 'sebi',
                     orchestratorAddress: 'https://cloud.uipath.com/aitraining',
                     orchestratorTenant: 'UiPathDefault',
                     parametersFilePath: '',
                     testResultsOutputPath: 'TEST_OUTPUT_PATH',
                     testTarget: TestProject(environments: '', testProjectPath: 'project.json')
                     timeout: 500,
                     traceLevel: 'Verbose'
                 )
                 script {
                     if (currentBuild.result == 'UNSTABLE'){
                         currentBuild.result = 'FAILURE'
                         TestsRunSuccessfully = 'False'
                     }
                 }
             }
         }
         stage('Build code for Process') {
            when {
                equals expected : 'True', actual: TestsRunSuccessfully
            }
             steps {
                 echo 'UiPathPack'
                 echo PROCESS_OUTPUT_PATH
                 UiPathPack (
                     outputPath: PROCESS_OUTPUT_PATH,
                     outputType: 'Process',
                     projectJsonPath: "${WORKSPACE}",
                     runWorkflowAnalysis: true,
                     traceLevel: 'None',
                     version: AutoVersion()
                 )
             }
         }
         stage('Deploy code') {
             when {
                equals expected : 'True', actual: TestsRunSuccessfully
            }
             steps {
                 echo 'UiPathDeploy'
                 UiPathDeploy (
                    createProcess: true,
                    credentials: Token(accountName: 'aitraining', credentialsId: 'userkeyOrch'),
                    entryPointPaths: 'Main.xaml',
                    environments: '',
                    folderName: 'sebi',
                    orchestratorAddress: 'https://cloud.uipath.com/aitraining',
                    orchestratorTenant: 'UiPathDefault',
                    packagePath: PROCESS_OUTPUT_PATH,
                    traceLevel: 'Verbose'
                )
             }
         }
         stage('Deploy assets') {
             when {
                equals expected : 'True', actual: TestsRunSuccessfully
            }
             steps {
                 echo 'UiPathDeployAssets'
                 UiPathAssets (
                     assetsAction: DeployAssets(),
                     credentials: Token(accountName: 'aitraining', credentialsId: 'userkeyOrch'),
                     filePath: ASSETS_FILE_PATH,
                     folderName: 'sebi',
                     orchestratorAddress: 'https://cloud.uipath.com/aitraining',
                     orchestratorTenant: 'UiPathDefault',
                     traceLevel: 'None'
                )
             }
         }
     }
 }
